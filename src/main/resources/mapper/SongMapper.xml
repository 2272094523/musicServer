<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ahao.java.music.dao.SongMapper">
    <resultMap id="LeftJoinMap" type="song">
        <id column="song_id" property="Song_id"></id>
        <result column="song_name" property="Song_name"></result>
        <result column="song_singerid" property="Song_singerId"></result>
        <result column="song_introduction" property="Song_introduction"></result>
        <result column="song_createtime" property="Song_createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="song_updatetime" property="Song_updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="song_img" property="Song_img"></result>
        <result column="song_lyric" property="Song_lyric"></result>
        <result column="song_url" property="Song_url"></result>
    </resultMap>
    <insert id="insertSong" parameterType="com.ahao.java.music.pojo.Song">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Song_name!=null">
                song_name,
            </if>
            <if test="Song_singerId!=null">
                song_singerid,
            </if>
            <if test="Song_introduction!=null">
                song_introduction,
            </if>
            <if test="Song_createTime!=null">
                song_createtime,
            </if>
            <if test="Song_updateTime!=null">
                song_updatetime,
            </if>
            <if test="Song_img!=null">
                song_img,
            </if>
            <if test="Song_lyric!=null">
                song_lyric,
            </if>
            <if test="Song_url!=null">
                song_url,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Song_name!=null">
                #{Song_name},
            </if>
            <if test="Song_singerId!=null">
                #{Song_singerid},
            </if>
            <if test="Song_introduction!=null">
                #{Song_introduction},
            </if>
            <if test="Song_createTime!=null">
                #{Song_createTime},
            </if>
            <if test="Song_updateTime!=null">
                #{Song_updateTime},
            </if>
            <if test="Song_img!=null">
                #{Song_img},
            </if>
            <if test="Song_lyric!=null">
                #{Song_lyric},
            </if>
            <if test="Song_url!=null">
                #{Song_url},
            </if>
        </trim>
    </insert>

    <update id="updateSong" parameterType="song">
        update song
        <set >
            <if test="Song_name!=null">
                song_name=#{Song_name},
            </if>
            <if test="Song_introduction!=null">
                song_introduction=#{Song_introduction},
            </if>
            <if test="Song_createTime!=null">
                song_createtime=#{Song_createTime},
            </if>
            <if test="Song_updateTime!=null">
                song_updatetime=#{Song_updateTime},
            </if>
            <if test="Song_img!=null">
                song_img=#{Song_img},
            </if>
            <if test="Song_lyric!=null">
                song_lyric=#{Song_lyric},
            </if>
            <if test="Song_url!=null">
                song_url=#{Song_url},
            </if>
        </set>
        where song_id=#{Song_id}
    </update>


    <delete id="deleteSong" parameterType="java.lang.Integer">
       delete from song where song_id=#{Song_id}
    </delete>


    <select id="selectAllSong" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_createtime,a.song_updatetime,a.song_img,a.song_lyric,a.song_url,b.singer_name
        from song a left join singer b
        on a.song_singerid=b.singer_id
    </select>

    <select id="fuzzySelectSongByName" parameterType="string" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_createtime,a.song_updatetime,a.song_img,a.song_lyric,a.song_url,b.singer_name
        from song a left join singer b
        on a.song_singerid=b.singer_id
        where song_name like contact('%',#{Song_name},'%')
    </select>

    <select id="selectSongById" parameterType="java.lang.Integer" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_createtime,a.song_updatetime,a.song_img,a.song_lyric,a.song_url,b.singer_name
        from song a left join singer b
        on a.song_singerid=b.singer_id
        where a.song_id=#{Song_id} limit 1
        select
    </select>

    <select id="selectAllSongBySingerId" parameterType="java.lang.Integer" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_createtime,a.song_updatetime,a.song_img,a.song_lyric,a.song_url,b.singer_name
        from song a left join singer b
        on a.song_singerid=b.singer_id
        where a.song_singerid=#{Song_singerId}
    </select>
</mapper>
