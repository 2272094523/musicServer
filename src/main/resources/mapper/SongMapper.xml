<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ahao.java.music.dao.SongMapper">
    <resultMap id="LeftJoinMap" type="com.ahao.java.music.pojo.Song">
        <id column="song_id" property="songId"></id>
        <result column="song_name" property="songName"></result>
        <result column="song_introduction" property="songIntroduction"></result>
        <result column="song_createtime" property="songCreateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="song_updatetime" property="songUpdateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="song_img" property="songImg"></result>
        <result column="song_lyric" property="songLyric"></result>
        <result column="song_url" property="songUrl"></result>
        <association property="singer" javaType="com.ahao.java.music.pojo.Singer">
            <id column="singer_id" property="singerId"></id>
            <result column="singer_name"  property="singerName"></result>
            <result column="singer_sex" property="singerSex"></result>
            <result column="singer_img" property="singerImg"></result>
            <result column="singer_introduction" property="singerIntroduction"></result>
            <result column="singer_birth" property="singerBirth"></result>
            <result column="singer_location" property="singerLocation"></result>
        </association>
    </resultMap>
    <resultMap id="BaseResultMap" type="com.ahao.java.music.pojo.Song">
        <result column="song_img" property="songImg"></result>
        <result column="song_url" property="songUrl"></result>
    </resultMap>
    <insert id="insertSong" parameterType="com.ahao.java.music.pojo.Song">
        insert into song
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="songName!=null">
                song_name,
            </if>
            <if test="singer.singerId!=null">
                song_singerid,
            </if>
            <if test="songIntroduction!=null">
                song_introduction,
            </if>
            <if test="songCreateTime!=null">
                song_createtime,
            </if>
            <if test="songUpdateTime!=null">
                song_updatetime,
            </if>
            <if test="songImg!=null">
                song_img,
            </if>
            <if test="songLyric!=null">
                song_lyric,
            </if>
            <if test="songUrl!=null">
                song_url,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="songName!=null">
                #{songName},
            </if>
            <if test="singer.singerId!=null">
                #{singer.singerId},
            </if>
            <if test="songIntroduction!=null">
                #{songIntroduction},
            </if>
            <if test="songCreateTime!=null">
                #{songCreateTime},
            </if>
            <if test="songUpdateTime!=null">
                #{songUpdateTime},
            </if>
            <if test="songImg!=null">
                #{songImg},
            </if>
            <if test="songLyric!=null">
                #{songLyric},
            </if>
            <if test="songUrl!=null">
                #{songUrl},
            </if>
        </trim>
    </insert>

    <update id="updateSong" parameterType="com.ahao.java.music.pojo.Song">
        update song
        <set >
            <if test="songName!=null">
                song_name=#{songName},
            </if>
            <if test="songIntroduction!=null">
                song_introduction=#{songIntroduction},
            </if>
            <if test="songCreateTime!=null">
                song_createtime=#{songCreateTime},
            </if>
            <if test="songUpdateTime!=null">
                song_updatetime=#{songUpdateTime},
            </if>
            <if test="songImg!=null">
                song_img=#{songImg},
            </if>
            <if test="songLyric!=null">
                song_lyric=#{songLyric},
            </if>
            <if test="songUrl!=null">
                song_url=#{songUrl},
            </if>
        </set>
        where song_id=#{songId}
    </update>


    <delete id="deleteSong" parameterType="java.lang.Integer">
       delete from song where song_id=#{songId}
    </delete>


    <select id="selectAllSong" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_img,a.song_url,a.song_lyric,b.singer_name as singer_name,b.singer_id as singer_id
        from song a left join singer b
        on a.song_singerid=b.singer_id
    </select>

    <select id="fuzzySelectSongByName" parameterType="string" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_img,a.song_url,a.song_lyric,b.singer_name as singer_name,b.singer_id as singer_id
        from song a left join singer b
        on a.song_singerid=b.singer_id
        where song_name like concat('%',#{songName},'%')
    </select>

    <select id="selectSongById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_img,a.song_url,a.song_lyric,a.song_createtime,a.song_updatetime,b.singer_name as singer_name,b.singer_id
        from song a left join singer b
        on a.song_singerid=b.singer_id
        where song_id=#{songId}
    </select>

    <select id="selectAllSongBySingerId" parameterType="java.lang.Integer" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,a.song_img,a.song_url,a.song_lyric,a.song_createtime,a.song_updatetime,b.singer_name as singer_name,b.singer_id as singer_id
        from song a left join singer b
        on a.song_singerid=b.singer_id
        where a.song_singerid=#{singerId}
    </select>
    <select id="selectSongNoInCurrentList"  parameterType="java.lang.Integer" resultMap="LeftJoinMap">
        select a.song_id,a.song_name,a.song_introduction,b.singer_name
        from song a left join singer b
        on a.song_singerid=b.singer_id
        where a.song_id not in(select song_id from listsong where songlist_id=#{songListId})
    </select>
    <select id="selectTotals" resultType="java.lang.Integer">
        select count(song_id) from song
    </select>
</mapper>
